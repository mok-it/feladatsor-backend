name: Build and deploy Docker image

on:
  push:
    tags:
      - v*

jobs:

  deploy-to-cloud-run:
    runs-on: ubuntu-latest
    name: Deploy to Google Cloud Run (Production)
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCR_JSON_KEY }}

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker

      - name: Extract version tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build Docker image for GCP with version tag
        run: |
          docker build -t gcr.io/${{ vars.GCP_PROJECT_ID }}/be-feladatsor:${{ steps.version.outputs.VERSION }} .

      - name: Push Docker image to GCR
        run: |
          docker push gcr.io/${{ vars.GCP_PROJECT_ID }}/be-feladatsor:${{ steps.version.outputs.VERSION }}

      - name: Run Database Migration (Production)
        run: |
          gcloud beta run jobs deploy db-migrate-job \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/be-feladatsor:${{ steps.version.outputs.VERSION }} \
            --region europe-north1 \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL_PROD }},JWT_SECRET=${{ secrets.JWT_SECRET_PROD }},PUBLIC_HOST=${{ vars.PUBLIC_HOST_PROD }},FIREBASE_VALIDATE_URL=${{ vars.FIREBASE_VALIDATE_URL }},FILE_STORAGE_FOLDER=/code/data \
            --command sh \
            --args -c,"npm run db:migrate:prod"
          
          gcloud run jobs execute db-migrate-job --region europe-north1 --wait

      - name: Deploy to Cloud Run (Production)
        run: |
          gcloud run deploy feladatsor-backend \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/be-feladatsor:${{ steps.version.outputs.VERSION }} \
            --platform managed \
            --region europe-north1 \
            --allow-unauthenticated \
            --add-volume name=imageData,type=cloud-storage,bucket=${{ vars.GCS_BUCKET_PROD }} \
            --add-volume-mount volume=imageData,mount-path=/code/data \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL_PROD }},JWT_SECRET=${{ secrets.JWT_SECRET_PROD }},JWT_EXPIRATION=${{ vars.JWT_EXPIRATION }},PUBLIC_HOST=${{ vars.PUBLIC_HOST_PROD }},FIREBASE_VALIDATE_URL=${{ vars.FIREBASE_VALIDATE_URL }},FILE_STORAGE_FOLDER=/code/data \
            --startup-probe httpGet.path=/health/readiness,httpGet.port=$PORT,initialDelaySeconds=20,failureThreshold=5