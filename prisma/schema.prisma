// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Exercise {
  id                String               @id @default(uuid())
  name              String
  description       String
  exerciseImage     String?
  solution          String
  elaboration       String?
  elaborationImage  String?
  helpingQuestions  String[]
  source            String?
  difficulty        ExerciseDifficulty[]
  history           ExerciseHistory[]
  similarExerciseId String?
  similarExercise   Exercise?            @relation("SimilarExercises", fields: [similarExerciseId], references: [id])
  similarExercises  Exercise[]           @relation("SimilarExercises")
  checks            ExerciseCheck[]
  createdBy         User                 @relation(fields: [createdById], references: [id])
  createdById       String
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @default(now()) @updatedAt
}

model ExerciseDifficulty {
  id                 String           @id @default(uuid())
  exercise           Exercise         @relation(fields: [exerciseId], references: [id])
  exerciseId         String
  ageGroup           ExerciseAgeGroup @relation(fields: [exerciseAgeGroupId], references: [id])
  difficulty         Int
  exerciseAgeGroupId String
}

model ExerciseAgeGroup {
  id        String               @id @default(uuid())
  exercises ExerciseDifficulty[]
  ageGroup  AgeGroup
}

enum AgeGroup {
  KOALA
  MEDVEBOCS
  KISMEDVE
  NAGYMEDVE
  JEGESMEDVE
}

model User {
  id            String          @id @default(uuid())
  name          String
  userName      String          @unique
  email         String
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  exercises     Exercise[]
  ExerciseCheck ExerciseCheck[]
}

model ExerciseCheck {
  id         String            @id @default(uuid())
  exercise   Exercise          @relation(fields: [exerciseId], references: [id])
  exerciseId String
  user       User              @relation(fields: [userId], references: [id])
  userId     String
  type       ExerciseCheckType
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @default(now()) @updatedAt
}

model ExerciseHistory {
  id         String   @id @default(uuid())
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String
}

enum ExerciseCheckType {
  GOOD
  CHANGE_REQUIRED
  TO_DELETE
}
